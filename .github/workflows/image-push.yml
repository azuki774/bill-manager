name: Build and Publish Docker

on:
  push:
    tags:
      - v*

jobs:
  gotest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.19

    - name: Run Lint staticcheck
      uses: dominikh/staticcheck-action@v1.2.0
      with:
        version: "2022.1"

    - name: test
      run: make test

  build_and_push_api:
    runs-on: ubuntu-latest
    needs: gotest
    env:
      IMAGE_NAME: bill-manager-api
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/azuki774/bill-manager-api
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern=latest

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Build and push api
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/dockerfile-api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
  
  build_and_push_remix:
    runs-on: ubuntu-latest
    needs: gotest
    env:
      IMAGE_NAME: bill-manager-remix
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/azuki774/bill-manager-remix
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern=latest

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Build and push remix
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/dockerfile-remix
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  build_and_push_mawinter:
    runs-on: ubuntu-latest
    needs: gotest
    env:
      IMAGE_NAME: bill-manager-mawinter
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/azuki774/bill-manager-mawinter
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern=latest
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Build binary
        run: go build -a -tags "netgo" -installsuffix netgo  -ldflags="-s -w -extldflags \"-static\"" -o build/bin/ ./...

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Build and push mawinter
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/dockerfile-mawinter
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build_and_push_twitter:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: bill-manager-twitter
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/azuki774/bill-manager-twitter
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern=latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Build and push twitter-client
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/dockerfile-twitter
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  build_and_push_water:
    runs-on: ubuntu-latest
    needs: gotest
    env:
      IMAGE_NAME: bill-manager-water
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/azuki774/bill-manager-water
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern=latest

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Build and push water
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/dockerfile-water
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  build_and_push_gas:
    runs-on: ubuntu-latest
    needs: gotest
    env:
      IMAGE_NAME: bill-manager-gas
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/azuki774/bill-manager-gas
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern=latest

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Build and push gas
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/dockerfile-gas
          push: true
          tags: ${{ steps.meta.outputs.tags }}
